// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/xyedo/blindate/pkg/service (interfaces: Attachment)

// Package mocksvc is a generated GoMock package.
package mocksvc

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/xyedo/blindate/pkg/domain"
)

// MockAttachment is a mock of Attachment interface.
type MockAttachment struct {
	ctrl     *gomock.Controller
	recorder *MockAttachmentMockRecorder
}

// MockAttachmentMockRecorder is the mock recorder for MockAttachment.
type MockAttachmentMockRecorder struct {
	mock *MockAttachment
}

// NewMockAttachment creates a new mock instance.
func NewMockAttachment(ctrl *gomock.Controller) *MockAttachment {
	mock := &MockAttachment{ctrl: ctrl}
	mock.recorder = &MockAttachmentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttachment) EXPECT() *MockAttachmentMockRecorder {
	return m.recorder
}

// DeleteBlob mocks base method.
func (m *MockAttachment) DeleteBlob(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBlob", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBlob indicates an expected call of DeleteBlob.
func (mr *MockAttachmentMockRecorder) DeleteBlob(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBlob", reflect.TypeOf((*MockAttachment)(nil).DeleteBlob), arg0)
}

// GetPresignedUrl mocks base method.
func (m *MockAttachment) GetPresignedUrl(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPresignedUrl", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPresignedUrl indicates an expected call of GetPresignedUrl.
func (mr *MockAttachmentMockRecorder) GetPresignedUrl(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPresignedUrl", reflect.TypeOf((*MockAttachment)(nil).GetPresignedUrl), arg0)
}

// UploadBlob mocks base method.
func (m *MockAttachment) UploadBlob(arg0 io.Reader, arg1 domain.Uploader) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadBlob", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadBlob indicates an expected call of UploadBlob.
func (mr *MockAttachmentMockRecorder) UploadBlob(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadBlob", reflect.TypeOf((*MockAttachment)(nil).UploadBlob), arg0, arg1)
}
